#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)
$LOAD_PATH.unshift File.expand_path('../lib/cloud/cpi_service/models', __dir__)

require 'yaml'
require 'ostruct'
require 'bosh/cpi'
require 'bundler'

Bundler.setup(:default)
require 'cloud/azure'

# ARGV.shift is the $BOSH_JOBS_DIR/azure_cpi/config/cpi.json
cpi_config = YAML.load_file(ARGV.shift)

std_err_logger = Bosh::AzureCloud::CPILogger.instance.get_logger(STDERR)
Bosh::AzureCloud::CPILogger.instance.logger = std_err_logger

cloud_config = OpenStruct.new(logger: std_err_logger)

Bosh::Clouds::Config.configure(cloud_config)

cpi_log = StringIO.new

cpi_lambda = lambda do |context, cpi_api_version = nil|
  raise 'Could not find cloud properties in the configuration' unless cpi_config.key?('cloud') && cpi_config['cloud'].key?('properties')

  cloud_properties = cpi_config['cloud']['properties']

  # allow azure config to be overwritten dynamically by context
  cloud_properties['azure'].merge!(context)

  Bosh::AzureCloud::Config.instance.update(cloud_properties)
  Bosh::Clouds::Azure.new(context)
end

# Redefine $stdout because azure libraries use print for info logging
$stdout = STDERR

cli = Bosh::Cpi::Cli.new(cpi_lambda, cpi_log, STDOUT)

cli.run(ARGF.read)
